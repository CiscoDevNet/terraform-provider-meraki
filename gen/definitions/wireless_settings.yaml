# @endpoint: /networks/{networkId}/wireless/settings
name: Wireless settings
rest_endpoint: /networks/%v/wireless/settings
put_create: true
no_delete: true
doc_category: Wireless
test_variables: [test_org, test_network]
attributes:
  - tf_name: network_id
    type: String
    id: true
    reference: true
    description: Network ID
    example: L_123456
    test_value: meraki_network.test.id
  - model_name: ipv6BridgeEnabled
    type: Bool
    description: "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
    example: "true"
    minimum_test_value: "true"
  - model_name: ledLightsOn
    type: Bool
    description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
    example: "true"
  - model_name: locationAnalyticsEnabled
    type: Bool
    description: Toggle for enabling or disabling location analytics for your network
    example: "false"
  - model_name: meshingEnabled
    type: Bool
    description: Toggle for enabling or disabling meshing in a network
    example: "true"
  - model_name: upgradeStrategy
    type: String
    description: The default strategy that network devices will use to perform an upgrade. Requires firmware version MR 26.8 or higher.
    example: minimizeUpgradeTime
    enum_values: [minimizeClientDowntime, minimizeUpgradeTime]
  - model_name: duration
    type: Int64
    data_path: [namedVlans, poolDhcpMonitoring]
    description: The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
    example: "5"
  - model_name: enabled
    type: Bool
    data_path: [namedVlans, poolDhcpMonitoring]
    description: Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP.
    example: "false"
test_prerequisites: |
  data "meraki_organization" "test" {
    name = var.test_org
  }
  resource "meraki_network" "test" {
    organization_id = data.meraki_organization.test.id
    name            = var.test_network
    product_types   = ["switch", "wireless"]
  }
