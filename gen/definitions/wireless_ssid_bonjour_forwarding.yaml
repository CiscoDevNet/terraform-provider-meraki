name: Wireless SSID Bonjour Forwarding
spec_endpoint: /networks/{networkId}/wireless/ssids/{number}/bonjourForwarding
rest_endpoint: /networks/%v/wireless/ssids/%v/bonjourForwarding
put_create: true
no_delete: true
doc_category: Wireless
test_variables: [test_org, test_network]
attributes:
  - tf_name: network_id
    type: String
    reference: true
    description: Network ID
    example: L_123456
    test_value: meraki_network.test.id
  - tf_name: number
    type: String
    id: true
    reference: true
    description: Wireless SSID number
    example: "0"
    test_value: meraki_wireless_ssid.test.id
  - model_name: enabled
    type: Bool
    description: If true, Bonjour forwarding is enabled on this SSID.
    example: "true"
    minimum_test_value: "false"
  - model_name: enabled
    type: Bool
    data_path: [exception]
    description: If true, Bonjour forwarding exception is enabled on this SSID. Exception is required to enable L2 isolation and Bonjour forwarding to work together.
    example: "false"
  - model_name: rules
    type: List
    description: List of bonjour forwarding rules.
    attributes:
      - model_name: description
        type: String
        description: A description for your Bonjour forwarding rule. Optional.
        example: A simple bonjour rule
      - model_name: vlanId
        type: String
        id: true
        mandatory: true
        description: The ID of the service VLAN. Required.
        example: "1"
      - model_name: services
        type: Set
        element_type: String
        mandatory: true
        description: A list of Bonjour services. At least one service must be specified. Available services are `All Services`, `AirPlay`, `AFP`, `BitTorrent`, `FTP`, `iChat`, `iTunes`, `Printers`, `Samba`, `Scanners` and `SSH`
        example: All Services
test_prerequisites: |
  data "meraki_organization" "test" {
    name = var.test_org
  }
  resource "meraki_network" "test" {
    organization_id = data.meraki_organization.test.id
    name            = var.test_network
    product_types   = ["switch", "wireless"]
  }
  resource "meraki_wireless_ssid" "test" {
    number = "0"
    name = "My SSID"
    network_id = meraki_network.test.id
    ip_assignment_mode = "Bridge mode"
  }
