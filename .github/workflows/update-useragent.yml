name: Update UserAgent with Release Version

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-useragent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Extract version from CHANGELOG
        id: extract-version
        run: |
          # Extract the latest version from CHANGELOG.md
          VERSION=$(grep -E '^## [0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1 | sed 's/^## //' | sed 's/ (unreleased)//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update UserAgent
        run: |
          python3 scripts/update-useragent-python.py
          
      - name: Verify UserAgent format
        run: |
          echo "Verifying UserAgent format..."
          if grep -q 'c\.UserAgent = "MerakiTerraform/.* Cisco"' internal/provider/provider.go; then
            echo "✅ UserAgent format is correct"
          else
            echo "❌ UserAgent format is incorrect"
            echo "Current UserAgent lines:"
            grep -n "UserAgent" internal/provider/provider.go || echo "No UserAgent found"
            exit 1
          fi

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
            echo "Files changed:"
            git diff --name-only
            echo "Diff content:"
            git diff
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add internal/provider/provider.go
          git commit -m "Update UserAgent to version ${{ steps.extract-version.outputs.version }}"
          git push